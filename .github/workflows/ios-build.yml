name: Build and Deploy iOS App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Build web app
      run: npm run build
      
    - name: Setup Capacitor and sync
      run: |
        npm install -g @capacitor/cli
        npx cap add ios
        npx cap sync ios
        
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Setup App Store Connect API Key and Authentication
      run: |
        mkdir -p ~/private_keys
        echo "${{ secrets.APP_STORE_CONNECT_API_KEY_CONTENT }}" | base64 --decode > ~/private_keys/AuthKey_${{ secrets.APP_STORE_CONNECT_KEY_ID }}.p8
        
        # Create authentication profile for xcodebuild
        xcrun notarytool store-credentials "ASC_PROFILE" \
          --key ~/private_keys/AuthKey_${{ secrets.APP_STORE_CONNECT_KEY_ID }}.p8 \
          --key-id ${{ secrets.APP_STORE_CONNECT_KEY_ID }} \
          --issuer ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }} \
          --no-validate
          
        # Set environment variables for xcodebuild
        export ASC_KEY_PATH=~/private_keys/AuthKey_${{ secrets.APP_STORE_CONNECT_KEY_ID }}.p8
        export ASC_KEY_ID=${{ secrets.APP_STORE_CONNECT_KEY_ID }}
        export ASC_ISSUER_ID=${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        
    - name: Create ExportOptions.plist
      run: |
        cat > ios/App/ExportOptions.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>app-store-connect</string>
            <key>teamID</key>
            <string>${{ secrets.APP_STORE_TEAM_ID }}</string>
            <key>signingStyle</key>
            <string>automatic</string>
            <key>uploadBitcode</key>
            <false/>
            <key>uploadSymbols</key>
            <true/>
        </dict>
        </plist>
        EOF
        
    - name: Build iOS app
      run: |
        cd ios/App
        xcodebuild -workspace App.xcworkspace -scheme App -configuration Release -destination generic/platform=iOS -archivePath App.xcarchive archive \
          DEVELOPMENT_TEAM="${{ secrets.APP_STORE_TEAM_ID }}" \
          CODE_SIGN_STYLE=Automatic \
          PROVISIONING_PROFILE_SPECIFIER="" \
          CODE_SIGN_IDENTITY="" \
          -allowProvisioningUpdates \
          -authenticationKeyPath ~/private_keys/AuthKey_${{ secrets.APP_STORE_CONNECT_KEY_ID }}.p8 \
          -authenticationKeyID ${{ secrets.APP_STORE_CONNECT_KEY_ID }} \
          -authenticationKeyIssuerID ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        
    - name: Export IPA
      run: |
        cd ios/App
        xcodebuild -exportArchive -archivePath App.xcarchive -exportPath . -exportOptionsPlist ExportOptions.plist \
          DEVELOPMENT_TEAM="${{ secrets.APP_STORE_TEAM_ID }}" \
          -allowProvisioningUpdates \
          -authenticationKeyPath ~/private_keys/AuthKey_${{ secrets.APP_STORE_CONNECT_KEY_ID }}.p8 \
          -authenticationKeyID ${{ secrets.APP_STORE_CONNECT_KEY_ID }} \
          -authenticationKeyIssuerID ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        
    - name: Upload to App Store
      run: |
        xcrun notarytool submit ios/App/App.ipa --key ~/private_keys/AuthKey_${{ secrets.APP_STORE_CONNECT_KEY_ID }}.p8 --key-id ${{ secrets.APP_STORE_CONNECT_KEY_ID }} --issuer-id ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }} --wait